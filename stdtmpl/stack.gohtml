// Code generated by ggi; DO NOT EDIT.

{{- $data := . }}
package {{ $data.pkg }}

{{ range $enf, $t := $data.enforcers }}
{{ if eq $enf "Stack" }}

type {{- $t.Name }} struct {
    i int
    items [{{- $t.Size }}]{{- $t.Type}}
}

var _ Stack = (*{{- $t.Name }})(nil)

func (s *{{- $t.Name }}) Size() int {
    return s.i
}

func (s *{{- $t.Name }}) Cap() int {
    return {{- $t.Size }}
}

func (s *{{- $t.Name }}) Pop() interface{} {
    s.i--
    return s.items[s.i]
}

func (s *{{- $t.Name }}) Push(x interface{}) {
    e := x.({{- $t.Type }})
    s.items[s.i] = e
    s.i++
}

func (s *{{- $t.Name }}) Peek() interface{} {
    return s.items[s.i - 1]
}

{{ end }}
{{ end }}